{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../inicio/inicio.component\";\nfunction ShowCorrectionComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"blockquote\", 4)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"footer\", 5);\n    i0.ɵɵtext(9, \"Fecha: \");\n    i0.ɵɵelementStart(10, \"cite\", 6);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelement(12, \"br\")(13, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const info_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", info_r1.Item, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(info_r1.Contenido);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(info_r1.Fecha);\n  }\n}\nexport class ShowCorrectionComponent {\n  constructor(dataService, paramRoute) {\n    this.dataService = dataService;\n    this.paramRoute = paramRoute;\n    this.atributo = '';\n    this.DataList = {};\n    this.DataList2 = [];\n  }\n  ngOnInit() {\n    this.atributo = 'id_Estudiante';\n    this.id = this.paramRoute.snapshot.paramMap.get('id');\n    this.MostrarCorrecciones();\n  }\n  MostrarCorrecciones() {\n    console.log('Atributo: ' + this.atributo);\n    console.log('ID: ' + this.id);\n    console.log();\n    this.dataService.getEspecificC(this.atributo, this.id).subscribe(data => {\n      this.DataList2 = data;\n      console.log(data);\n    });\n  }\n}\nShowCorrectionComponent.ɵfac = function ShowCorrectionComponent_Factory(t) {\n  return new (t || ShowCorrectionComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nShowCorrectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowCorrectionComponent,\n  selectors: [[\"app-show-correction\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"card\", 2, \"margin-left\", \"20%\", \"margin-right\", \"20%\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"blockquote\", \"mb-0\"], [1, \"blockquote-footer\"], [\"title\", \"Source Title\"]],\n  template: function ShowCorrectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-inicio\")(1, \"br\");\n      i0.ɵɵtemplate(2, ShowCorrectionComponent_div_2_Template, 14, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.DataList2);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.InicioComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEAA,2BAAoC;IAG5BA,YACF;IAAAA,iBAAM;IACNA,8BAAuB;IAEhBA,YAAkB;IAAAA,iBAAI;IACzBA,iCAAkC;IAAAA,uBAAO;IAAAA,gCAA2B;IAAAA,aAAc;IAAAA,iBAAO;IAIjGA,sBAAI;IACNA,iBAAM;;;;IAVEA,eACF;IADEA,6CACF;IAGOA,eAAkB;IAAlBA,uCAAkB;IAC+CA,eAAc;IAAdA,mCAAc;;;ACA5F,OAAM,MAAOC,uBAAuB;EAOlCC,YAAoBC,WAAuB,EAAUC,UAA0B;IAA3D,gBAAW,GAAXD,WAAW;IAAsB,eAAU,GAAVC,UAAU;IAJ/D,aAAQ,GAAU,EAAE;IACpB,aAAQ,GAAQ,EAAE;IAClB,cAAS,GAAgB,EAAE;EAEsD;EAEjFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,eAAe;IAC/B,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,UAAU,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IACjBC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAC,IAAI,CAACP,QAAQ,CAAC;IACvCM,OAAO,CAACC,GAAG,CAAC,MAAM,GAAC,IAAI,CAACN,EAAE,CAAC;IAC3BK,OAAO,CAACC,GAAG,EAAE;IACb,IAAI,CAACV,WAAW,CAACW,aAAa,CAAC,IAAI,CAACR,QAAQ,EAAE,IAAI,CAACC,EAAE,CAAC,CAACQ,SAAS,CAAEC,IAAI,IAAG;MACvE,IAAI,CAACC,SAAS,GAAGD,IAAI;MACrBJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;AAvBWf,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVpCtB,6BAAyB;MAEzBA,yEAaM;;;MAbgBA,eAAY;MAAZA,uCAAY","names":["i0","ShowCorrectionComponent","constructor","dataService","paramRoute","ngOnInit","atributo","id","snapshot","paramMap","get","MostrarCorrecciones","console","log","getEspecificC","subscribe","data","DataList2","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\antho\\Downloads\\final\\FRONTE\\src\\app\\Component\\show-correction\\show-correction.component.html","C:\\Users\\antho\\Downloads\\final\\FRONTE\\src\\app\\Component\\show-correction\\show-correction.component.ts"],"sourcesContent":["<app-inicio></app-inicio>\n<br>\n<div *ngFor=\"let info of DataList2\">\n  <div class=\"card\" style=\"margin-left: 20%; margin-right: 20%;\">\n      <div class=\"card-header\">\n        {{info.Item}}\n      </div>\n      <div class=\"card-body\">\n        <blockquote class=\"blockquote mb-0\">\n          <p>{{info.Contenido}}</p>\n          <footer class=\"blockquote-footer\">Fecha: <cite title=\"Source Title\">{{info.Fecha}}</cite></footer>\n        </blockquote>\n      </div>\n  </div>\n  <br><br>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/Services/Data.service';\nimport { Correcion } from 'src/app/Models/Correcion.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-show-correction',\n  templateUrl: './show-correction.component.html',\n  styleUrls: ['./show-correction.component.sass']\n})\nexport class ShowCorrectionComponent implements OnInit{\n\n  id: any;\n  atributo: string= '';\n  DataList: any = {};\n  DataList2: Correcion[] = [];\n\n  constructor(private dataService:DataService, private paramRoute: ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.atributo = 'id_Estudiante';\n    this.id = this.paramRoute.snapshot.paramMap.get('id');\n    this.MostrarCorrecciones();\n  }\n\n  MostrarCorrecciones(){\n    console.log('Atributo: '+this.atributo);\n    console.log('ID: '+this.id);\n    console.log();\n    this.dataService.getEspecificC(this.atributo, this.id).subscribe((data)=>{\n      this.DataList2 = data;\n      console.log(data);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}