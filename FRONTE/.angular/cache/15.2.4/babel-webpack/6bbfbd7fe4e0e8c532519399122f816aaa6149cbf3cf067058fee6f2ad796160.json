{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:9100/';\n  }\n  getP() {\n    return this.http.get(this.url + 'viewProyect');\n  }\n  getAP() {\n    return this.http.get(this.url + 'viewAnteProyect');\n  }\n  getC() {\n    return this.http.get(this.url + 'viewCorrection');\n  }\n  dropP(id) {\n    return this.http.delete(this.url + 'deleteProyect/' + id);\n  }\n  dropAP(id) {\n    return this.http.delete(this.url + 'deleteAnteProyect/' + id);\n  }\n  editAP(ap) {\n    return this.http.put(this.url + 'editAnteProyect', ap);\n  }\n  saveAP(ap) {\n    return this.http.post(this.url + \"createAnteProyect\", ap);\n  }\n  saveP(p) {\n    return this.http.post(this.url + \"createProyect\", p);\n  }\n  saveC(c) {\n    return this.http.post(this.url + \"createCorrection\", c);\n  }\n  getUsuario() {\n    return this.http.get(this.url + 'viewUser');\n  }\n  getID_User(usu) {\n    return this.http.post(this.url + 'findUser', usu);\n  }\n  getOneAP(id) {\n    return this.http.get(this.url + 'unAnteProyect/' + id);\n  }\n  getEspecificC(atributo, valor) {\n    return this.http.get(this.url + 'especificC/' + atributo + '/' + valor);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,QAAG,GAAG,wBAAwB;EAEU;EAExCC,IAAI;IACF,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,aAAa,CAAC;EAC9C;EACAC,KAAK;IACH,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,iBAAiB,CAAC;EAClD;EACAE,IAAI;IACF,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,gBAAgB,CAAC;EACjD;EAEAG,KAAK,CAACC,EAAS;IACb,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACL,GAAG,GAAC,gBAAgB,GAACI,EAAE,CAAC;EACvD;EAEAE,MAAM,CAACF,EAAS;IACd,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACL,GAAG,GAAC,oBAAoB,GAACI,EAAE,CAAC;EAC3D;EAEAG,MAAM,CAACC,EAAgB;IACrB,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACT,GAAG,GAAC,iBAAiB,EAAEQ,EAAE,CAAC;EACtD;EAEAE,MAAM,CAACF,EAAgB;IACrB,OAAO,IAAI,CAACX,IAAI,CAACc,IAAI,CAAC,IAAI,CAACX,GAAG,GAAC,mBAAmB,EAAEQ,EAAE,CAAC;EACzD;EAEAI,KAAK,CAACC,CAAW;IACf,OAAO,IAAI,CAAChB,IAAI,CAACc,IAAI,CAAC,IAAI,CAACX,GAAG,GAAC,eAAe,EAAEa,CAAC,CAAC;EACpD;EAEAC,KAAK,CAACC,CAAY;IAChB,OAAO,IAAI,CAAClB,IAAI,CAACc,IAAI,CAAC,IAAI,CAACX,GAAG,GAAC,kBAAkB,EAAEe,CAAC,CAAC;EACvD;EAEAC,UAAU;IACR,OAAO,IAAI,CAACnB,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,UAAU,CAAC;EAC3C;EAEAiB,UAAU,CAACC,GAAY;IACrB,OAAO,IAAI,CAACrB,IAAI,CAACc,IAAI,CAAC,IAAI,CAACX,GAAG,GAAC,UAAU,EAAEkB,GAAG,CAAC;EACjD;EAEAC,QAAQ,CAACf,EAAU;IACjB,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,gBAAgB,GAACI,EAAE,CAAC;EACpD;EAEAgB,aAAa,CAACC,QAAgB,EAAEC,KAAa;IAC3C,OAAO,IAAI,CAACzB,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,GAAG,GAAC,aAAa,GAACqB,QAAQ,GAAC,GAAG,GAACC,KAAK,CAAC;EACjE;;AArDW3B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA4B,SAAX5B,WAAW;EAAA6B,YAFV;AAAM","names":["DataService","constructor","http","getP","get","url","getAP","getC","dropP","id","delete","dropAP","editAP","ap","put","saveAP","post","saveP","p","saveC","c","getUsuario","getID_User","usu","getOneAP","getEspecificC","atributo","valor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\antho\\Downloads\\final\\FRONTE\\src\\app\\Services\\Data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AnteProyecto } from '../Models/AnteProyecto.model';\nimport { Usuario } from '../Models/Usuario.model';\nimport { Proyecto } from '../Models/Proyecto.model';\nimport { Correcion } from '../Models/Correcion.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  url = 'http://localhost:9100/';\n\n  constructor(private http: HttpClient) { }\n\n  getP(): Observable<any>{\n    return this.http.get(this.url+'viewProyect');\n  }\n  getAP(): Observable<any>{\n    return this.http.get(this.url+'viewAnteProyect');\n  }\n  getC(): Observable<any>{\n    return this.http.get(this.url+'viewCorrection');\n  }\n\n  dropP(id:string): Observable<any>{\n    return this.http.delete(this.url+'deleteProyect/'+id)\n  }\n\n  dropAP(id:string): Observable<any>{\n    return this.http.delete(this.url+'deleteAnteProyect/'+id)\n  }\n\n  editAP(ap: AnteProyecto){\n    return this.http.put(this.url+'editAnteProyect', ap);\n  }\n\n  saveAP(ap: AnteProyecto): Observable<any>{\n    return this.http.post(this.url+\"createAnteProyect\", ap)\n  }\n\n  saveP(p: Proyecto): Observable<any>{\n    return this.http.post(this.url+\"createProyect\", p)\n  }\n\n  saveC(c: Correcion): Observable<any>{\n    return this.http.post(this.url+\"createCorrection\", c)\n  }\n\n  getUsuario(): Observable<any>{\n    return this.http.get(this.url+'viewUser');\n  }\n\n  getID_User(usu: Usuario): Observable<any>{\n    return this.http.post(this.url+'findUser', usu);\n  }\n\n  getOneAP(id: string): Observable<any>{\n    return this.http.get(this.url+'unAnteProyect/'+id);\n  }\n\n  getEspecificC(atributo: string, valor: string): Observable<any>{\n    return this.http.get(this.url+'especificC/'+atributo+'/'+valor);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}